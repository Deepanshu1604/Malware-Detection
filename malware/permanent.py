import requests
import re
import os

# Replace 'YOUR_API_KEY' with your actual VirusTotal API key
API_KEY = '24df8395eb89a56075dd03b25a14e6e64feb4f2174ad7c3d3098c6b130049fec'


def is_valid_ip(ip):
    # Regular expression to validate an IP address
    ip_pattern = r"^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$"
    return re.match(ip_pattern, ip)


def is_malicious_domain(input_string):
    url = f'https://www.virustotal.com/api/v3/domains/{input_string}'
    headers = {
        'x-apikey': API_KEY,
    }

    response = requests.get(url, headers=headers)

    if response.status_code == 200:
        result = response.json()
        if 'data' in result:
            data = result['data']
            if 'attributes' in data:
                attributes = data['attributes']
                if 'last_analysis_stats' in attributes:
                    last_analysis_stats = attributes['last_analysis_stats']
                    if 'malicious' in last_analysis_stats and last_analysis_stats['malicious'] > 0:
                        return True

    return False


def is_malicious_ip(input_string):
    if not is_valid_ip(input_string):
        return False

    url = f'https://www.virustotal.com/api/v3/ip_addresses/{input_string}'
    headers = {
        'x-apikey': API_KEY,
    }

    response = requests.get(url, headers=headers)

    if response.status_code == 200:
        result = response.json()
        if 'data' in result:
            data = result['data']
            if 'attributes' in data:
                attributes = data['attributes']
                if 'last_analysis_stats' in attributes:
                    last_analysis_stats = attributes['last_analysis_stats']
                    if 'malicious' in last_analysis_stats and last_analysis_stats['malicious'] > 0:
                        return True

    return False


def is_malicious_file(input_to_check):
    if os.path.isfile(input_to_check):
        url = 'https://www.virustotal.com/api/v3/files'
        headers = {
            'x-apikey': API_KEY,
        }

        # Determine the file type based on the file extension
        file_extension = os.path.splitext(input_to_check)[-1].lower()

        # Define a mapping of file extensions to VirusTotal file types
        file_type_mapping = {
            '.apk': 'apk',
            '.zip': 'zip',
            '.rar': 'rar',
            '.pdf': 'pdf',
            # Add more file extensions and corresponding types as needed
        }

        file_type = file_type_mapping.get(file_extension, 'file')

        files = {'file': (os.path.basename(input_to_check),
                          open(input_to_check, 'rb'))}
        params = {'file_type': file_type}  # Specify the file type

        response = requests.post(url, headers=headers,
                                 files=files, params=params)

        if response.status_code == 200:
            result = response.json()
            if 'data' in result:
                data = result['data']
                if 'attributes' in data:
                    attributes = data['attributes']
                    if 'last_analysis_stats' in attributes:
                        last_analysis_stats = attributes['last_analysis_stats']
                        if 'malicious' in last_analysis_stats and last_analysis_stats['malicious'] > 0:
                            return True

    return False


# Input to check (can be a domain, IP address, or file path)
# Replace with the domain, IP address, or file path you want to check
input_to_check = "tulas.edu.in"

if is_valid_ip(input_to_check):
    if is_malicious_ip(input_to_check):
        print(f"The input '{input_to_check}' is a malicious IP address.")
    else:
        print(f"The input '{input_to_check}' is not a malicious IP address.")
elif '.' in input_to_check and '/' not in input_to_check and '\\' not in input_to_check:
    if is_malicious_domain(input_to_check):
        print(f"The input '{input_to_check}' is a malicious domain.")
    else:
        print(f"The input '{input_to_check}' is not a malicious domain.")
elif os.path.isfile(input_to_check):
    if is_malicious_file(input_to_check):
        print(f"The file '{input_to_check}' is malicious.")
    else:
        print(f"The file '{input_to_check}' is not malicious.")
else:
    print(
        f"The input '{input_to_check}' is not recognized as a valid IP, domain, or file.")
