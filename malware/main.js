const axios = require('axios');
const API_KEY = '531999d79b8307e568161aa4faab9faa678681a47f998cf026fab6304a1550e5';

function isValidIP(ip) {
    const ipPattern = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;
    return ipPattern.test(ip);
}

async function isMaliciousDomain(inputString) {
    const url = `https://www.virustotal.com/api/v3/domains/${inputString}`;
    const headers = { 'x-apikey': API_KEY };

    try {
        const response = await axios.get(url, { headers });

        if (response.status === 200) {
            const result = response.data;
            if ('data' in result) {
                const data = result.data;
                if ('attributes' in data) {
                    const attributes = data.attributes;
                    if ('last_analysis_stats' in attributes) {
                        const lastAnalysisStats = attributes.last_analysis_stats;
                        if ('malicious' in lastAnalysisStats && lastAnalysisStats.malicious > 0) {
                            return true;
                        }
                    }
                }
            }
        }

        return false;
    } catch (error) {
        console.error('Error:', error);
        return false;
    }
}

async function isMaliciousIP(inputString) {
    if (!isValidIP(inputString)) {
        return false;
    }

    const url = `https://www.virustotal.com/api/v3/ip_addresses/${inputString}`;
    const headers = { 'x-apikey': API_KEY };

    try {
        const response = await axios.get(url, { headers });

        if (response.status === 200) {
            const result = response.data;
            if ('data' in result) {
                const data = result.data;
                if ('attributes' in data) {
                    const attributes = data.attributes;
                    if ('last_analysis_stats' in attributes) {
                        const lastAnalysisStats = attributes.last_analysis_stats;
                        if ('malicious' in lastAnalysisStats && lastAnalysisStats.malicious > 0) {
                            return true;
                        }
                    }
                }
            }
        }

        return false;
    } catch (error) {
        console.error('Error:', error);
        return false;
    }
}

async function isMaliciousFile(inputToCheck) {
    // Implement file-related functionality if required
    return false;
}

// Input to check (can be a domain, IP address, or file path)
// Replace with the domain, IP address, or file path you want to check
const inputToCheck = 'hack.me';

if (isValidIP(inputToCheck)) {
    isMaliciousIP(inputToCheck)
        .then((result) => {
            if (result) {
                console.log(`The input '${inputToCheck}' is a malicious IP address.`);
            } else {
                console.log(`The input '${inputToCheck}' is not a malicious IP address.`);
            }
        })
        .catch((error) => console.error(error));
} else if (inputToCheck.includes('.') && !inputToCheck.includes('/') && !inputToCheck.includes('\\')) {
    isMaliciousDomain(inputToCheck)
        .then((result) => {
            if (result) {
                console.log(`The input '${inputToCheck}' is a malicious domain.`);
            } else {
                console.log(`The input '${inputToCheck}' is not a malicious domain.`);
            }
        })
        .catch((error) => console.error(error));
} else {
    console.log(`The input '${inputToCheck}' is not recognized as a valid IP, domain, or file.`);
}
